@use 'variables';
@use 'mixins';
@use 'inheritance';

/*Focus*/
    *:focus {
        outline: 0;
    }

/*Body*/
    html, body {
        height: 100%;
        margin: 0;
    }    
    body {
        background: variables.$bg-color;
        color: variables.$text-color;
        font-family: variables.$main-font;
    }

/*Containers*/
    .wrapper {
        @extend %flex;
        flex-direction: column;
        min-height: 100vh;
        width: 95%;
        margin: 30px auto;
    }

/*Main*/
    main {
        flex: 1;
        margin-top: 30px;
    }
    section h1 {
        font-size: 2em;
        margin-bottom: 30px;
    }

/*Text Styles*/
    .sr-only {
        border: 0;
        clip: rect(0,0,0,0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }    
    .center-text {
        text-align: center;
    }
    .uppercase {
        @include mixins.uppercase();
    }
    a {    
        color: variables.$text-color;
        text-decoration: none;
    }
    p {
        font-family: variables.$sub-font;
    }

/*Icons*/
    .material-icons {
        vertical-align: middle;
    }

/*Button Animation*/
    .btn-animate {
        box-sizing: border-box;
        // Using inset box-shadow instead of border for sizing simplicity
        box-shadow: inset 0 0 0 1px variables.$btn;
        color: #FFF;
        font-size: inherit;

        // Required, since we're setting absolute on pseudo-elements
        position: relative;
        vertical-align: middle;

        &::before, &::after {
            box-sizing: inherit;
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
        }
    }
    .btn-animate-center {
        // Set up base styles, we're going to scale instead of animating width/height
        &::before, &::after {
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            transform-origin: center; // Ensure scaling is done from the center (expands outwards)
        }
        // scale3d(<scale-horizontal>, <scale-vertical>, <scale-depth>);
        &::before {
            border-top: 1px solid variables.$btn-hover;
            border-bottom: 1px solid variables.$btn-hover;
            transform: scale3d(0,1,1); // Shrink only width
        }
        &::after {
            border-left: 1px solid variables.$btn-hover;
            border-right: 1px solid variables.$btn-hover;
            transform: scale3d(1,0,1); // Shrink only height
        }
        &:hover::before,&:hover::after {
            transform: scale3d(1,1,1); // Show full-size
            transition: transform 0.5s;
        }
    }

/*Form*/
    ::placeholder {
        color: #D8D8D8;
        opacity: 0.8;
        text-align: left;
        @include mixins.uppercase();
    }
    button, input[type=button], input, select, textarea {
        background: none;
        border: 0;
        color: silver;
        font: 400 .98em variables.$main-font;
    }
    form.vertical > * {
        display: block;
        margin-bottom: 30px;
    }
    form input, form select, form textarea {
        border-bottom: 1px solid rgba(255, 255, 255, 0.5);
        padding: 4px 0;
    }
    form input:not([type=checkbox]):not([type=radio]), form select, form textarea {
        width: 100%;
    }
    form input:not([type=submit]) {
        text-indent: 5px;
    }
    input:not([type=checkbox]):not([type=radio]), select, textarea {
        width: 100%;
    }
    input:not([type=submit]) {
        text-indent: 5px; 
    }
    select {
        height: 28px;
        @include mixins.uppercase();
    }
    select option, textarea {
        text-transform: initial;
    }
    select option:not(:disabled) {
        color: #000;
        font: .93em variables.$sub-font;
    }
    textarea {
        height: 120px;
        resize: none;
    }
    form [type=submit] {
        cursor: pointer;
        height: 45px;
        width: 120px;
        margin-top: 35px;
        @include mixins.uppercase();
    }

    /*Input Containers*/
        .form-input {
            input {
                width: 240px !important;
            }
            input:first-of-type {
                margin-right: 20px;
            }
        }

/*Address*/
    address {
        font-size: 14.5px;
        
        .material-icons {
            margin-right: 20px;
        }
    }